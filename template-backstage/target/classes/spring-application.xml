<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-4.1.xsd  
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-4.1.xsd     
    http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"
	default-lazy-init="false">
<context:component-scan base-package="taibao"/> 
	<!-- 初始化数据 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClass}" />
	</bean> -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
            <property name="driver" value="${jdbc.driverClass}"/>
            <property name="driverUrl" value="${jdbc.url}"/>
            <property name="user" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
           <!-- 最小连接数-->
            <property name="minimumConnectionCount" value="${jdbc.minPoolSize}"/>
            <!-- 最大连接数  -->
            <property name="maximumConnectionCount" value="${jdbc.maxPoolSize}"/>
            <!-- 最少保持的空闲连接数 （默认2个） -->
             <property name="prototypeCount" value="${jdbc.prototypeCount}"/>
            <!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒） -->
            <!-- <property name="houseKeepingSleepTime" value="${proxool.hourseKeepingSleepTime}"/> -->
            <!-- 最大活动时间(超过此时间线程将被kill,默认为5分钟) -->
             <!-- <property name="maximumActiveTime" value="${proxool.maximumActiveTime}"/> -->
            <!-- 连接最长时间(默认为4个小时) -->
            <!-- <property name="maximumConnectionLifetime" value="${proxool.maximumConnectionLifetime}"/> -->
            
            <!-- -->
           <!--  <property name="statistics" value="${proxool.statistics}"/> -->
            <!-- 别名 -->
            <property name="alias" value="BasePermission"/>
            <!-- -->
            <!-- <property name="simultaneousBuildThrottle" value="${proxool.simultaneous-build-throttle}"/> -->
     </bean>
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动匹配Mapper映射文件 -->
		<property name="mapperLocations" >
            <list>
                <!-- mapper接口对应的xml路径 如果mapper接口的保内有和接口名一致的xml 则不用配置这个 -->
                <value>classpath*:*/*-mapper.xml</value>
            </list>
        </property>   
		<!-- <property name="typeAliasesPackage" value="com.weitu.*.entity" /> -->
	</bean>
	<!-- 通过扫描的模式，扫描目录在com.weitu.permission.mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="taibao.*.mapper" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- <aop:config> <aop:pointcut expression="execution(public * com.lanyuan.controller.*(..))" 
		id="pointcut" /> <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="query*" propagation="REQUIRED" read-only="true" 
		/> <tx:method name="find*" propagation="REQUIRED" read-only="true" /> <tx:method 
		name="save*" propagation="REQUIRED" /> <tx:method name="delete*" propagation="REQUIRED" 
		/> <tx:method name="add*" propagation="REQUIRED" /> <tx:method name="modify*" 
		propagation="REQUIRED" /> <tx:method name="logicDelById" propagation="REQUIRED" 
		/> </tx:attributes> </tx:advice> -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> <bean id="log4jHandlerAOP" 
		class="com.lanyuan.logAop.LogAopAction"></bean> <aop:config proxy-target-class="true"> 
		<aop:aspect id="logAspect" ref="log4jHandlerAOP"> <aop:pointcut id="logPointCut" 
		expression="execution(* org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(..))" 
		/> <aop:around method="logAll" pointcut-ref="logPointCut" /> </aop:aspect> 
		</aop:config> -->
	<!-- 使用Spring组件扫描的方式来实现自动注入bean -->
	<!-- <context:component-scan base-package="com.lanyuan.task" /> -->
	<!-- <context:component-scan base-package="com.weitu.*.service.impl" /> -->
	<!-- 隐式地向 Spring 容器注册 -->
	<context:annotation-config />
</beans>
